name: Go Test

on:
  pull_request:
    branches:
      - "**" # Run on PRs to any branch

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      etcd:
        image: bitnami/etcd:latest
        ports:
          - 2379:2379
          - 2380:2380
        env:
          ALLOW_NONE_AUTHENTICATION: yes
          ETCD_ADVERTISE_CLIENT_URLS: http://etcd:2379
        options: >-
          --health-cmd "etcdctl endpoint health --endpoints=http://127.0.0.1:2379 || exit 1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 10

      loki:
        image: grafana/loki:latest
        ports:
          - 3100:3100
        options: >-
          --health-cmd "wget --quiet --tries=1 --spider http://127.0.0.1:3100/ready || exit 1"
          --health-interval 5s
          --health-timeout 5s
          --health-retries 20
        # Mounting a config file isn't trivial in GitHub Actions, so use default config
        # If your tests require a custom config, bake it into a custom image

    steps:
      # 1. Checkout the PR code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23.5"

      - name: Start NATS service
        run: |
          docker run -d \
            --name nats-js \
            -p 4222:4222 \
            -v "/tmp/nats-jsdata":"/data/js" \
            --health-cmd "wget --quiet --tries=1 --spider http://127.0.0.1:8222 || exit 1" \
            --health-interval 5s \
            --health-timeout 5s \
            --health-retries 20 \
            nats:latest -js --store_dir /data/js

      - name: Download Go modules
        run: go mod tidy

      # Run tests
      - name: Run tests
        run: go test ./... -v -coverprofile=cover.out -covermode=atomic

      # Stop NATS service
      - name: Stop NATS service
        run: docker stop nats-js

      - uses: qltysh/qlty-action/coverage@v1
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: cover.out
