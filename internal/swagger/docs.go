// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Conveyor Support",
            "url": "https://conveyor.open.ug/",
            "email": "conveyor@open.ug"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://opensource.org/license/apache-2-0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/drivers/broadcast-message": {
            "post": {
                "description": "Create a new message and broadcast it to drivers via NATS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "drivers"
                ],
                "summary": "Publish a message",
                "parameters": [
                    {
                        "description": "Driver message object",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.DriverMessage"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message published successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get the health status of the API server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "Health status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resource-definitions": {
            "post": {
                "description": "Create a new resource definition with the specified configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource-definitions"
                ],
                "summary": "Create a resource definition",
                "parameters": [
                    {
                        "description": "Resource definition object",
                        "name": "resourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource definition created successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid payload",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resource-definitions/apply": {
            "post": {
                "description": "Create a new resource definition or update existing one by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource-definitions"
                ],
                "summary": "Create or update a resource definition",
                "parameters": [
                    {
                        "description": "Resource definition object",
                        "name": "resourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource definition created or updated successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid payload or missing name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resource-definitions/{name}": {
            "get": {
                "description": "Retrieve a specific resource definition by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource-definitions"
                ],
                "summary": "Get a resource definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource definition name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource definition object",
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a specific resource definition by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource-definitions"
                ],
                "summary": "Update a resource definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource definition name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource definition object",
                        "name": "resourceDefinition",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource definition updated successfully",
                        "schema": {
                            "$ref": "#/definitions/types.ResourceDefinition"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid payload or missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific resource definition by its name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resource-definitions"
                ],
                "summary": "Delete a resource definition",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource definition name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource definition deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resources": {
            "post": {
                "description": "Create a new resource with the specified type and configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Create a new resource",
                "parameters": [
                    {
                        "description": "Resource object",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Resource"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Resource created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid payload or validation failed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Resource definition not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resources/{type}": {
            "get": {
                "description": "List all resources of a specific type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "List resources",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of resources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/types.Resource"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resources/{type}/{name}": {
            "get": {
                "description": "Retrieve a specific resource by its name and type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Get a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource object",
                        "schema": {
                            "$ref": "#/definitions/types.Resource"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "Update a specific resource by its name and type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Update a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Resource object",
                        "name": "resource",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.Resource"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource updated successfully",
                        "schema": {
                            "$ref": "#/definitions/types.Resource"
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid payload or missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a specific resource by its name and type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Delete a resource",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Resource deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/resources/{type}/{name}/{version}": {
            "get": {
                "description": "Retrieve a specific resource by its name, type, and version",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "resources"
                ],
                "summary": "Get a resource by version",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Resource type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Resource version",
                        "name": "version",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resource object",
                        "schema": {
                            "$ref": "#/definitions/types.Resource"
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing parameters",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "types.DriverMessage": {
            "type": "object",
            "properties": {
                "event": {
                    "description": "Event Name e.g. ` + "`" + `create` + "`" + `",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "payload": {
                    "description": "JSON Payload",
                    "type": "string"
                },
                "run_id": {
                    "type": "string"
                }
            }
        },
        "types.Resource": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "name": {
                    "type": "string"
                },
                "resource": {
                    "type": "string"
                },
                "spec": {}
            }
        },
        "types.ResourceDefinition": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "schema": {},
                "version": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.31",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{"http", "https"},
	Title:            "Conveyor CI API",
	Description:      "Conveyor is a lightweight, distributed CI/CD engine built for platform developers who demand simplicity without compromise.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
